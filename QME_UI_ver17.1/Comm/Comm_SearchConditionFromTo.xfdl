<?xml version="1.0" encoding="utf-8"?>
<FDL version="2.0">
  <Form id="cmmSearchConditionFromTo" width="440" height="21" onload="form_onload" scrolltype="none">
    <Layouts>
      <Layout height="21" width="440">
        <Static id="Static00" taborder="1" text="To" left="181" top="0" width="28" height="21" textAlign="center"/>
        <Edit id="EditFrom" taborder="1" left="0" height="21" top="0" cssclass="essential" width="150" autoselect="true"/>
        <Edit id="EditTo" taborder="2" left="220" height="21" top="0" cssclass="essential" width="150" autoselect="true"/>
        <Button id="btnFrom" taborder="3" left="150" top="0" width="21" height="21" cssclass="btn_WF_search" text="" onclick="div_search_btn_onclick" EditNameToApply="From"/>
        <Button id="btnTo" taborder="4" left="370" top="0" width="21" height="21" cssclass="btn_WF_search" text="" onclick="div_search_btn_onclick" EditNameToApply="To"/>
        <Button id="btnMultiSelect" taborder="5" left="392" top="0" width="21" height="21" cssclass="btn_WF_pop1" text="" EditNameToApply="List" onclick="div_search_btn_onclick"/>
        <Edit id="EditList" taborder="6" left="0" height="21" top="30" cssclass="essential" width="391" autoselect="true" visible="false"/>
      </Layout>
    </Layouts>
    <Script type="xscript5.1"><![CDATA[include "Src_HintsEduLib::All_EduLib.xjs";

/**
*  @MenuPath    Comm > Comm_CalFromTo (공통 기간달력)
*  @FileName 	Comm_CalFromTo.xfdl 
*  @Creator 	Education
*  @CreateDate 	2019.01.10
*  @Desction    기간달력
************** 소스 수정 이력 ***************************************************
*  date          		Modifier                Description
*******************************************************************************
*  2019.01.10     	Education 	               최초 생성 
*******************************************************************************
*/

this.sSearchConditionType  	;
this.oBindDs  				;
this.oBindFromCol 			;
this.oBindToCol 			;
this.oBindListCol 			;
var ds_SearchConditionType = this.gfn_getApplication().gds_SearchConditionType;
this.form_onload = function(obj:nexacro.Form,e:nexacro.LoadEventInfo)
{
	var gtrcPos = "Comm_SearchConditionFromTo.xfdl.form_onload";
	
	// 0.선언
	var sEvFrm;
	
	{	//	2. 상위 폼 찾아 오기
		sEvFrm = "this.parent.form.parent.parent";		//왜 parent를 두번 써야 하는 것인가 ??
		
		while(eval(sEvFrm) instanceof nexacro.Form){
			sEvFrm += ".parent";
		}																				//this.gtrace("sEvFrm--->"+sEvFrm, gtrcPos);
			sEvFrm += ".parent";						//왜 parent를 두번 써야 하는 것인가 ??
	}
	
	{	//	3. userproperty를 통해 전역에 타입,바인딩DS,컬럼 세팅
		var arrUserProp = this._getUserProperty("this.parent","SearchConditionType");	this.gtrace("this.parent.SearchConditionType--->"+this.parent.SearchConditionType, gtrcPos);

		this.sSearchConditionType  	= nexacro.trim(this.gfn_nvl(arrUserProp[0],""));					this.gtrace("sSearchConditionType--->"+this.sSearchConditionType, gtrcPos);
		this.oBindDs  				= eval(sEvFrm+"."+nexacro.trim(this.gfn_nvl(arrUserProp[1],"")));	this.gtrace("oBindDs.name --->"+this.oBindDs.name, gtrcPos);
		this.oBindFromCol 			= nexacro.trim(this.gfn_nvl(arrUserProp[2],""));                    this.gtrace("oBindFromCol--->"+this.oBindFromCol, gtrcPos);
		this.oBindToCol 			= nexacro.trim(this.gfn_nvl(arrUserProp[3],""));                    this.gtrace("oBindToCol--->"+this.oBindToCol, gtrcPos);
		this.oBindListCol			= nexacro.trim(this.gfn_nvl(arrUserProp[4],""));                    this.gtrace("oBindListCol--->"+this.oBindListCol, gtrcPos);
	}
	
	{
		// oncolumnchanged 이벤트 추가
		this.oBindDs.addEventHandler("oncolumnchanged", this.fn_parentDsChanged, this);
	}
	
	{	//  9. 기본호출 ( 그리드, 초기화 )
		//	this.gfn_formOnLoad(this);
		this.fn_init();
	}
};

this.fn_parentDsChanged = function(objDs, e)
{
		var gtrcPos = "Comm_SearchConditionFromTo.xfdl.fn_parentDsChanged";
			this.gtrace("● 온컬럼체인지드 : fn_parentDsChanged", gtrcPos);
// 	var arrFromStr 	= ["_sta","1"];	//나중에...
// 	var arrToStr 	= ["_end","2"];
// 	var arrListStr 	= ["_list"];
	
	var sColId 		= e.columnid;					this.gtrace("sColId --->"+sColId 	,gtrcPos);
	if(sColId==this.oBindFromCol
	|| sColId==this.oBindToCol
	|| sColId==this.oBindListCol)
	{
		var iFromNdx 	= sColId.indexOf("_sta");		this.gtrace("iFromNdx --->"+iFromNdx 	,gtrcPos);
			iFromNdx = (iFromNdx==-1?sColId.indexOf("1"):iFromNdx);
		var iToNdx		= sColId.indexOf("_end");		this.gtrace("iToNdx	--->"+iToNdx		,gtrcPos);
			iToNdx = (iToNdx==-1?sColId.indexOf("2"):iToNdx);
		var iListNdx	= sColId.indexOf("_list");		this.gtrace("iListNdx --->"+iListNdx	,gtrcPos);
		var sFromToList = (iFromNdx > -1 ? "From" : (iToNdx > -1 ? "To" : (iListNdx > -1 ? "List" : null)));
		
		var setDsCol;
		switch(sFromToList){
			case "From" : 	setDsCol = this.oBindFromCol;	break;
			case "To" 	: 	setDsCol = this.oBindToCol;		break;
			case "List" : 	setDsCol = this.oBindListCol;	break;
			default : break;
		}

		if(setDsCol == e.columnid)
		{
			this.ds_FromTo.setColumn(0, sFromToList, e.newvalue);
		}
	}
}

/**
* @description 초기화
*/
this.fn_init = function()
{
	//1.데이터셋
	this.ds_FromTo.clearData();
	this.ds_FromTo.addRow();
	
	//2.리스트창 위치를 맞춤
	this.EditList.set_top(0);
};

/**
* @description 검색버튼 클릭
*/
this.div_search_btn_onclick = function(obj:nexacro.Button,e:nexacro.ClickEventInfo)
{
			var gtrcPos = "Comm_SearchConditionFromTo.xfdl.div_search_btn_onclick";	// trace위치 세팅
	var sSearchCond;
	var sPopupId;
	var sPrevMultiText;
	var sSrchCndTp = this.sSearchConditionType;
	
	{ //	1. 팝업 띄우기
		if(obj.name == "btnMultiSelect"){
			sSearchCond = "MultiSelect";
			sPopupId = sSearchCond;
			sPrevMultiText = this.ds_FromTo.getColumn(0, "List");
		}
		else{
			sSearchCond = this.sSearchConditionType;
			sPopupId 	= "modalPopup";
			sPrevMultiText = "";
		}
		//팝업의 URL
		var sPopUrl 	= ds_SearchConditionType.lookup("TypeCode",sSearchCond, "PopupUrl");		this.gtrace("sPopUrl--->"+sPopUrl, gtrcPos);
		//팝업의 TitleText
		var sPopTitle	= this.gfn_getWord(ds_SearchConditionType.lookup("TypeCode",sSearchCond, "PopupTitle"));	this.gtrace("sPopTitle--->"+sPopTitle, gtrcPos);
		var sUrl      	= sPopUrl;
		var oArg      	= {pStr:sPrevMultiText, pNum:sSrchCndTp, pObj:obj.EditNameToApply};
		var sCallBack 	= "fn_popupCallback";
		var oOption   	= {title : sPopTitle};	
		
		this.gfn_openPopup(sPopupId, sUrl, oArg, sCallBack, oOption);
	}
};

/**
* @description 콜백
*/
this.fn_popupCallback = function(sPopId, sRtn)
{
			var gtrcPos = "Comm_SearchConditionFromTo.xfdl.fn_popupCallback";
													this.gtrace("sPopId--->"+sPopId, gtrcPos);
	switch(sPopId)
	{
		default : 
			var dsSetCol 		;
			var sKey			;
			var sName			;
			var	sEtc_00			;
			var	sEtc_10			;
			
			if(!this.gfn_isNull(sRtn))
			{	//0.리턴값 데이터셋에 세팅
															this.gtrace("JSON.parse(sRtn)--->"	+JSON.parse(sRtn), gtrcPos);
				var objRtn 		= 	JSON.parse(sRtn);		this.gtrace("objRtn--->"	+objRtn, gtrcPos);	
																											   
				dsSetCol 	= 	objRtn.rtnObj;				this.gtrace("dsSetCol--->"	+dsSetCol, gtrcPos);
				sKey		=	objRtn.sRtnKey;				this.gtrace("sKey	--->"	+sKey	, gtrcPos);    
				sName		=	objRtn.sRtnName;			this.gtrace("sName	--->"	+sName	, gtrcPos);    
				sEtc_00		=	objRtn.sRtnEtc_00;			this.gtrace("sEtc_00--->"	+sEtc_00, gtrcPos);    
				sEtc_10		=	objRtn.sRtnEtc_10;			this.gtrace("sEtc_10--->"	+sEtc_10, gtrcPos);    
																											   
				this.ds_FromTo.setColumn(0, dsSetCol, sKey);	//	oncolumnchanged 이벤트 --> 부모 데이터셋에 바로 세팅
			}

			break;
	}
}

this.ds_FromTo_oncolumnchanged = function(obj:nexacro.NormalDataset,e:nexacro.DSColChangeEventInfo)
{
											var gtrcPos = "Comm_SearchConditionFromTo.xfdl.ds_FromTo_oncolumnchanged";
												this.gtrace("e.columnid				>"+e.columnid						,gtrcPos);
												this.gtrace("sSearchConditionTypes	>"+this.sSearchConditionType		,gtrcPos);
												this.gtrace("oBindFromCol			>"+this.oBindFromCol				,gtrcPos);
												this.gtrace("oBindToCol				>"+this.oBindToCol					,gtrcPos);
												this.gtrace("oBindListCol			>"+this.oBindListCol				,gtrcPos);

	{	//부모데이터셋에 값 세팅
		var sParentSetCol;
		switch(e.columnid){
			case "From" : sParentSetCol = this.oBindFromCol;	break;
			case "To" 	: sParentSetCol = this.oBindToCol; 		break;
			case "List" : sParentSetCol = this.oBindListCol;
						  // 값이 없는 경우 List 메세지를 숨김
						  if(this.gfn_nvl(obj.getColumn(0, "List"),"")==""){
							this.EditList.set_visible(false);
						  }else{
							this.EditList.set_visible(true);
						  }
					break;
			default : 	break;
		}
		
		this.oBindDs.setColumn(0, sParentSetCol, e.newvalue);
	}
	
};

]]></Script>
    <Objects>
      <Dataset id="ds_FromTo" oncolumnchanged="ds_FromTo_oncolumnchanged">
        <ColumnInfo>
          <Column id="From" type="STRING" size="256"/>
          <Column id="To" type="STRING" size="256"/>
          <Column id="List" type="STRING" size="256"/>
        </ColumnInfo>
      </Dataset>
    </Objects>
    <Bind>
      <BindItem id="item0" compid="EditFrom" propid="value" datasetid="ds_FromTo" columnid="From"/>
      <BindItem id="item1" compid="EditTo" propid="value" datasetid="ds_FromTo" columnid="To"/>
      <BindItem id="item2" compid="EditList" propid="value" datasetid="ds_FromTo" columnid="List"/>
    </Bind>
  </Form>
</FDL>
